name: CI

on:
  push:
    branches-ignore:
      - master
      - dev
      - 'renovate/**'
  pull_request:
    branches-ignore:
      - master
      - dev
      - 'renovate/**'

jobs:
  test-lint:
    name: Test & Lint
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
          POSTGRES_HOST: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:7.4.0-alpine
        ports:
          - "6379:6379"

    env:
      POETRY_VERSION: 1.2.2
      PYTHON_VERSION: 3.11.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: free disk space
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          df -h

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create env file
        working-directory: src/core
        run: |
          echo '${{ secrets.REPO_ENV_FILE }}' > .env

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}

      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        id: cached-poetry-dependencies
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: poetry install --no-interaction --no-root
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Install torch
        run: pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Install wtpslit
        run: poetry add wtpsplit
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Install packages
        run: poetry run python -m spacy download ru_core_news_sm
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Apply migrations
        run: |
          poetry run python src/manage.py migrate

      - name: Run tests and collect coverage
        run: |
            make test

      - name: disk space
        run: |
          df -h
