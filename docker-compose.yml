volumes:
  postgres_data:
  static_volume:
  video_download:

services:
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "5433:5432"
    command: --autovacuum=off --fsync=off --synchronous_commit=off --full_page_writes=off --work_mem=12MB --max-connections=10 --max_wal_senders=0

  db:
    image: postgres:13-alpine
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
    networks:
      - netw
    env_file:
      - ./.env

  backend:
    build:
      context: .
      dockerfile: ./infra/Dockerfile
    volumes:
      - video_download:/tmp/videos/
      - static_volume:/backend_static
    command: >
      sh -c "gunicorn core.wsgi:application --bind 0:8000 --timeout 200"
    depends_on:
      - db
    ports:
      - "8000:8000"
    networks:
      - netw
    env_file:
      - .env

  redis:
    image: redis:7.4.0-alpine
    hostname: redis
    command: /bin/sh -c "redis-server --appendonly yes --requirepass $$REDIS_HOST_PASSWORD"
    ports:
      - "6379:6379"
    networks:
      - netw
    env_file:
      - ./.env

  worker:
    build:
      context: .
      dockerfile: ./infra/Dockerfile
    hostname: worker
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info -E --concurrency=1
    volumes:
      - video_download:/tmp/videos/
    links:
      - redis
    depends_on:
      - redis
      - db
    networks:
      - netw
    env_file:
      - .env

  celery-beat:
    build:
      context: .
      dockerfile: ./infra/Dockerfile
    hostname: celery-beat
    entrypoint: celery
    command: -A celery_app.app beat --loglevel=info
    volumes:
      - video_download:/tmp/videos/
    links:
      - redis
    depends_on:
      - redis
      - db
    networks:
      - netw
    env_file:
      - .env

  flower:
    build:
      context: .
      dockerfile: ./infra/Dockerfile
    hostname: flower
    entrypoint: celery
    command: -A celery_app.app flower --url_prefix=flower --basic_auth=${FLOWER_USER}:${FLOWER_PASSWORD}
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - FLOWER_PORT=5555
    volumes:
      - video_download:/tmp/videos/
    links:
      - redis
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery-beat
      - backend
    env_file:
      - .env
    networks:
      - netw


  nginx:
    image: nginx:latest
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/staticfiles
      - video_download:/media
    depends_on:
      - backend
    networks:
      - netw

networks:
  netw:
    driver: bridge
